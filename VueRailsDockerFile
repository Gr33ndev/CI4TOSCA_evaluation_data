# ========================
# Base Environment Setup
# ========================
FROM ubuntu:20.04 AS base

# Prevent interactive prompts (fix tzdata issue)
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y \
    git \
    curl \
    npm \
    ruby-full \
    build-essential \
    libsqlite3-dev \
    sqlite3 \
    nginx \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# ========================
# Clone Repositories
# ========================
FROM base AS source

WORKDIR /app
RUN git clone --depth=1 https://github.com/mutoe/vue3-realworld-example-app.git frontend \
    && git clone --depth=1 https://github.com/alexeymezenin/ruby-on-rails-realworld-example-app.git backend

# ========================
# Frontend Build (Vue.js)
# ========================
FROM node:18 AS frontend-build

WORKDIR /app/frontend
COPY --from=source /app/frontend ./

# Install dependencies and build the project (ignores peer dependency errors)
RUN npm install --legacy-peer-deps && npm run build || { echo "Vue build failed"; exit 1; }

# Debugging step: Check if the build folder exists
RUN ls -l /app/frontend/dist

# ========================
# Backend Setup (Rails)
# ========================
FROM ruby:3.1.3 AS backend-build

WORKDIR /app/backend
COPY --from=source /app/backend ./

# Ensure correct Bundler version is installed
RUN gem install bundler -v 2.3.26 \
    && bundle _2.3.26_ install --jobs 4 --retry 3

# Set Rails environment before asset precompilation
ENV RAILS_ENV=production
ENV SECRET_KEY_BASE=dummy_secret_key

# Run migrations before precompiling assets
RUN bundle exec rake db:migrate
RUN bundle exec rake assets:precompile || echo "Skipping assets precompilation"

# Set correct permissions
RUN chown -R www-data:www-data /app/backend/tmp /app/backend/log /app/backend/public

# ========================
# Final Container (Nginx + Rails)
# ========================
FROM ruby:3.1.3

# Install Nginx
RUN apt update && apt install -y nginx && rm -rf /var/lib/apt/lists/*

# Set up working directory
WORKDIR /app

# Copy frontend build files to Nginx web root
COPY --from=frontend-build /app/frontend/dist /usr/share/nginx/html

# Copy backend app to final image
COPY --from=backend-build /app/backend /app/backend
WORKDIR /app/backend

# Install Rails dependencies
RUN bundle install

# Inject correct Nginx configuration inside the container
RUN echo ' \
server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri /index.html; \
    } \
    location /api/ { \
        proxy_pass http://127.0.0.1:3000; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \
        proxy_set_header X-Forwarded-Proto $scheme; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Expose ports (80 for frontend, 3000 for Rails API)
EXPOSE 80 3000

# Start Rails backend and serve Vue.js via Nginx
CMD ["sh", "-c", "nginx & bundle exec rails server -b 0.0.0.0 -p 3000"]
